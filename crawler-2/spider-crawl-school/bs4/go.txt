{'网页标题': 'go每日一库 [go-rate] 速率限制器  - Go语言中文网 - Golang中文社区', '文章发布时间': <span class="timeago" title="2021-04-06 17:38:59"></span>, '文章标题': '\r\n\t\t\t\t\t\tgo每日一库 [go-rate] 速率限制器\r\n\t\t\t\t\t', '文章内容': 'go-rate是速率限制器库,基于 Token Bucket(令牌桶)算法实现。 go-rate被用在LangTrend的生产中 用于遵守GitHub API速率限制。\n速率限制可以完成一些特殊的功能需求，包括但不限于服务器端垃圾邮件保护、防止api调用饱和等。\n我们首先构造一个限流器对象：\n这里有两个参数：\n上述的限流器的含义是：拥有一个容量为1的令牌桶，以每钞10个的速度向桶中放令牌。\n除了直接指定每秒产生的 Token 个数外，还可以用 Every 方法来指定向 Token 桶中放置 Token 的间隔，例如：\n以上就表示每 100ms 往桶中放一个 Token。本质上也就是一秒钟产生 10 个。\nLimiter 提供了三类方法供用户消费 Token，用户可以每次消费一个 Token，也可以一次性消费多个 Token。\n而每种方法代表了当 Token 不足时，各自不同的对应手段。\nWait 实际上就是 WaitN(ctx,1)。\n当使用 Wait 方法消费 Token 时，如果此时桶内 Token 数组不足 (小于 N)，那么 Wait 方法将会阻塞一段时间，直至 Token 满足条件。如果充足则直接返回。\n这里可以看到，Wait 方法有一个 context 参数。我们可以设置 context 的 Deadline 或者 Timeout，来决定此次 Wait 的最长时间。\nAllow 实际上就是 AllowN(time.Now(),1)。\n'}